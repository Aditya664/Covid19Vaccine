/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.covid.forms;

import com.covid.classes.DBClass;
import com.covid.classes.Messages;
import com.covid.classes.PDFUtility;
import com.covid.classes.StatusClass;
import com.covid.classes.VaccineClass;
import com.covid.classes.sendMail2;
import java.awt.Image;
import java.sql.*;
import java.text.ParseException;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import org.apache.commons.lang3.RandomStringUtils;

/**
 *
 * @author Aditya
 */
public class GiveVaccine extends javax.swing.JFrame {

    DBClass db = new DBClass();

    /**
     * Creates new form GiveVaccine
     */
    public GiveVaccine() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Refid = new javax.swing.JTextField();
        Dtype = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Dno = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        Vstatus = new javax.swing.JTextField();
        idpic = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        kGradientPanel2.setkEndColor(new java.awt.Color(255, 0, 102));
        kGradientPanel2.setkStartColor(new java.awt.Color(255, 153, 153));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/certificate (3).png"))); // NOI18N
        jLabel6.setText("Give Vaccine");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(19, 19, 19))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        jLabel8.setBackground(new java.awt.Color(14, 109, 173));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/message.png"))); // NOI18N
        jLabel8.setText("Enter Refference Id");

        jLabel11.setBackground(new java.awt.Color(14, 109, 173));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/id-card (3).png"))); // NOI18N
        jLabel11.setText("Document Type");

        Dtype.setEditable(false);

        jLabel12.setBackground(new java.awt.Color(14, 109, 173));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/id-card (4).png"))); // NOI18N
        jLabel12.setText("Document NO");

        Dno.setEditable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/searching.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jButton1.setText("Confirm Vaccination?");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel13.setBackground(new java.awt.Color(14, 109, 173));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/id-card (4).png"))); // NOI18N
        jLabel13.setText("Vaccine Status");

        Vstatus.setEditable(false);

        idpic.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        idpic.setForeground(new java.awt.Color(255, 255, 255));
        idpic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idpic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/id-card.png"))); // NOI18N

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(idpic, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173))
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Dno, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Dtype, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Vstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                                .addComponent(Refid, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(idpic, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(Refid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(45, 45, 45)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Dtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(41, 41, 41)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Dno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(32, 32, 32)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Vstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(24, 24, 24)
                .addComponent(jButton1)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked

        dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        String refid = Refid.getText();
        ResultSet rs = db.getData("select * from regisetrforvaccine where refid=?", refid);
        try {
            if (rs.next()) {
                String idno = rs.getString(3);
                String idtype = rs.getString(2);
                String vstatus = rs.getString(13);
                byte[] img = rs.getBytes(6);
                Image imgaImage = getToolkit().createImage(img);
                ImageIcon icon = new ImageIcon(imgaImage);
                idpic.setIcon(icon);
                Dtype.setText(idtype);
                Dno.setText(idno);
                this.Vstatus.setText(vstatus);
            } else {
                Messages.showError("Record Not found", "Error");
            }
        } catch (SQLException ex) {
            Logger.getLogger(GiveVaccine.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String refid = Refid.getText();
        String pid = RandomStringUtils.randomNumeric(10);
        ResultSet rs = db.getData("select * from regisetrforvaccine where refid=? and Vaccinecenter=?", refid, StatusClass.centername);
        try {
            if (rs.next()) {
                String appointment = rs.getString(9);
                Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(appointment);
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
                Date date = new Date();
                Calendar cal = Calendar.getInstance();
                cal.add(Calendar.MONTH, 3);
                Date dateAsObjAfterAMonth = cal.getTime();
                System.out.println(format.format(dateAsObjAfterAMonth));
                String secondvdate = format.format(dateAsObjAfterAMonth);
                Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(secondvdate);
                VaccineClass.SDose = secondvdate;
                String vdate = format.format(date);
                VaccineClass.Vccintedat = vdate;
                VaccineClass.pid = pid;
                String doctype = rs.getString(2);
                String name = rs.getString(5);
                VaccineClass.Fname = name;
                VaccineClass.doctype = doctype;
                String docno = rs.getString(3);
                VaccineClass.idno = docno;
                String gender = rs.getString(6);
                VaccineClass.gender = gender;
                String age = rs.getString(7);
                VaccineClass.age = age;
                String byear = rs.getString(8);
                VaccineClass.dob = byear;
                String center = rs.getString(10);
                VaccineClass.centername = center;
                String Vname = rs.getString(10);
                VaccineClass.Vaccinename = Vname;
                String Ref = rs.getString(15);
                String idd = rs.getString(14);
                VaccineClass.refid = Ref;
                String docname = VaccineClass.docname;
                String country = "IND";
                String email1 = StatusClass.user;
                String pass = StatusClass.pass;
                if (date1.after(date)) {
                    Messages.showWarning("Register again", "gfgf");
                } else {
                    ResultSet rs2 = db.getData("select * from centertbl where usename='" + email1 + "' and password='" + pass + "'");
                    if (rs2.next()) {
                        if (rs2.getInt(9) > 0 && rs2.getInt(10) > 0) {
                            ResultSet rs1 = db.getData("select * from register_tbl where rid=?", idd);
                            if (rs.getString(13).equals("Registered For First Dose")) {
                                if (VaccineClass.Vaccinename.equals("Covaxin")) {
                                    int covaxin = rs2.getInt(9);
                                    int rem = covaxin - 1;
                                    db.execute("update centertbl set covaxin = '" + rem + "'");
                                    String Lname = rs.getString(3);
                                    String email = rs1.getString(4);
                                    VaccineClass.VStatus = "First Dose Completed";
                                    String vstatus = VaccineClass.VStatus;
                                    int id = 0;
                                    String fullname = name + " " + Lname;
                                    db.execute("INSERT INTO `vaccinetbl`(`id`, `Name`, `CenterName`, `DoseNo`, `Dosedate`, `NextDoseDate`, `Doctor`) VALUES ('"+id+"','"+fullname+"','"+center+"','"+vstatus+"','"+vdate+"','"+secondvdate+"','"+docname+"')");
                                    db.execute("update regisetrforvaccine set date='" + vdate + "',dcompleted='First Dose Completed' where refid='" + refid + "'");
                                    PDFUtility.generateCertificate(name, pid, Ref, Lname, age, docname, byear, center, doctype, docno, gender, Vname, secondvdate, vstatus, vdate, country);
                                    String msg = "Dear " + name + " " + Lname + ",\n Congratulations! You have successfully completed completed the schedule of all doses of COVID-19 vaccine..\n ";
                                    sendMail2.sendMail(email, msg, refid);
                                } else {
                                    rs1.next();
                                    int covidsheild = rs2.getInt(10);
                                    int rem = covidsheild - 1;
                                    db.execute("update centertbl set Covishield = '" + rem + "'");
                                    String Lname = rs1.getString(3);
                                    String email = rs1.getString(4);
                                    VaccineClass.VStatus = "First Dose Completed";
                                    String vstatus = VaccineClass.VStatus;
                                    int id = 0;
                                    String fullname = name + " " + Lname;
                                    db.execute("INSERT INTO `vaccinetbl`(`id`, `Name`, `CenterName`, `DoseNo`, `Dosedate`, `NextDoseDate`, `Doctor`) VALUES ('"+id+"','"+fullname+"','"+center+"','"+vstatus+"','"+vdate+"','"+secondvdate+"','"+docname+"')");
                                    db.execute("update regisetrforvaccine set date='" + vdate + "',dcompleted='First Dose Completed' where refid='" + refid + "'");
                                    PDFUtility.generateCertificate(name, pid, Ref, Lname, age, docname, byear, center, doctype, docno, gender, Vname, secondvdate, vstatus, vdate, country);
                                    String msg = "Dear " + name + " " + Lname + ",\n Congratulations! You have successfully completed completed the schedule of all doses of COVID-19 vaccine..\n ";
                                    sendMail2.sendMail(email, msg, refid);
                                }

                            } else if (rs.getString(13).equals("First Dose Completed") && date2.before(date)) {
                                rs1.next();
                                if (VaccineClass.Vaccinename.equals("Covaxin")) {
                                    int covaxin = rs.getInt(9);
                                    int rem = covaxin - 1;
                                    db.execute("update centertbl set covaxin = '" + rem + "'");
                                    String Lname = rs1.getString(3);
                                    String email = rs1.getString(4);
                                    VaccineClass.VStatus = "Second Dose is Completed";
                                    String vstatus = VaccineClass.VStatus;
                                    int id = 0;
                                    String fullname = name + " " + Lname;
                                    db.execute("INSERT INTO `vaccinetbl`(`id`, `Name`, `CenterName`, `DoseNo`, `Dosedate`, `NextDoseDate`, `Doctor`) VALUES ('"+id+"','"+fullname+"','"+center+"','"+vstatus+"','"+vdate+"','"+secondvdate+"','"+docname+"')");
                                    db.execute("update regisetrforvaccine set date='" + vdate + "', dcompleted='Fully Vaccinated' where refid='" + refid + "'");
                                    PDFUtility.generateCertificate(name, pid, Ref, name, age, docname, byear, center, doctype, docno, gender, Vname, secondvdate, vstatus, vdate, country);
                                    String msg = "Dear " + name + " " + Lname + ",\n Congratulations! You have successfully completed First dose of COVID-19 vaccine.\n ";
                                    sendMail2.sendMail(email, msg, refid);
                                } else {
                                    int covaxin = rs.getInt(9);
                                    int rem = covaxin - 1;
                                    db.execute("update centertbl set covishield = '" + rem + "'");
                                    String Lname = rs1.getString(3);
                                    String email = rs1.getString(4);
                                    VaccineClass.VStatus = "Second Dose is Completed";
                                    String vstatus = VaccineClass.VStatus;
                                    int id = 0;
                                    String fullname = name + " " + Lname;
                                    db.execute("INSERT INTO `vaccinetbl`(`id`, `Name`, `CenterName`, `DoseNo`, `Dosedate`, `NextDoseDate`, `Doctor`) VALUES ('"+id+"','"+fullname+"','"+center+"','"+vstatus+"','"+vdate+"','"+secondvdate+"','"+docname+"')");
                                    db.execute("update regisetrforvaccine set date='" + vdate + "', dcompleted='Fully Vaccinated' where refid='" + refid + "'");
                                    PDFUtility.generateCertificate(name, pid, Ref, name, age, docname, byear, center, doctype, docno, gender, Vname, secondvdate, vstatus, vdate, country);
                                    String msg = "Dear " + name + " " + Lname + ",\n Congratulations! You have successfully completed First dose of COVID-19 vaccine.\n ";
                                    sendMail2.sendMail(email, msg, refid);
                                }
                            } else {
                                VaccineClass.VStatus = "Fully Vaccinated";
                                return;
                            }
                        } else {
                            Messages.showError("Stock not available", "Error");
                        }

                    } else {
                        Messages.showError("Something went wrong", "Error");
                    }
                }

            } else {
                Messages.showError("Something went wrong", "Error");
            }
        } catch (SQLException ex) {
            Logger.getLogger(GiveVaccine.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(GiveVaccine.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(GiveVaccine.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GiveVaccine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GiveVaccine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GiveVaccine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GiveVaccine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GiveVaccine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Dno;
    private javax.swing.JTextField Dtype;
    private javax.swing.JTextField Refid;
    private javax.swing.JTextField Vstatus;
    private javax.swing.JLabel idpic;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    // End of variables declaration//GEN-END:variables
}
